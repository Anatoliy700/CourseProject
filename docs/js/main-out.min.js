"use strict";var _createClass=function(){function a(t,e){for(var s=0;s<e.length;s++){var a=e[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(t,e,s){return e&&a(t.prototype,e),s&&a(t,s),t}}();function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Basket=function(){function e(t){_classCallCheck(this,e),this.settings=t,this.countGoods=0,this.amount=0,this.basketItems=[],this.$productsWrap=null,this.$elemCounter=$("#"+t.idCountGoods),this.$elemTotalPrice=null}return _createClass(e,[{key:"render",value:function(t){this.$productsWrap=$("<div />",{class:this.settings.basketHeaderSettings.classWrapProducts}),this.$elemTotalPrice=$("<span />",{class:this.settings.basketHeaderSettings.classTotalValue});var e=$("<div />",{class:this.settings.basketHeaderSettings.classWrapPriceTotal}).append($("<span />",{class:this.settings.basketHeaderSettings.classTotalDescription,text:"total"})).append(this.$elemTotalPrice),s=$("<div />",{class:this.settings.basketHeaderSettings.classWrapButton}).append($("<button />",{class:this.settings.basketHeaderSettings.classButtonCheckout,text:"Checkout"})).append($("<button />",{class:this.settings.basketHeaderSettings.classButtonGoToCart,text:"Go to cart","data-type":"shopping-cart"}));t.append(this.$productsWrap).append(e).append(s),this.getBasket()}},{key:"getBasket",value:function(o){$.ajax({type:"GET",url:this.settings.pathJsonFile,context:this,success:function(t){this.amount=t.amount;var e=!0,s=!1,a=void 0;try{for(var i,n=t.basket[Symbol.iterator]();!(e=(i=n.next()).done);e=!0){var r=i.value;this.countGoods+=r.quantity,this.basketItems.push(r)}}catch(t){s=!0,a=t}finally{try{!e&&n.return&&n.return()}finally{if(s)throw a}}this.refresh(),o()},error:function(t){console.log("Произошла ошибка при получении данных",t)},dataType:"json"})}},{key:"add",value:function(e,t,s,a){var i={id_product:e,price:s,title:t,src:a,quantity:1},n=this.basketItems.findIndex(function(t){return t.id_product===e});-1===n?this.basketItems.push(i):this.basketItems[n].quantity++,this.countGoods++,this.amount+=s,this.refresh()}},{key:"addQuantity",value:function(s,a){var i=this;this.basketItems.findIndex(function(t){if(t.id_product===s){var e=a-t.quantity;t.quantity+=e,i.countGoods+=e,i.amount+=t.price*e}i.refresh()})}},{key:"remove",value:function(t){for(var e in this.basketItems)if(this.basketItems[e].id_product===t){this.amount-=this.basketItems[e].price,this.countGoods--,1<this.basketItems[e].quantity?this.basketItems[e].quantity--:this.basketItems.splice(e,1),this.refresh();break}}},{key:"removeAllQuantity",value:function(t){for(var e in this.basketItems)if(this.basketItems[e].id_product===t){var s=this.basketItems[e].quantity;this.amount-=this.basketItems[e].price*s,this.countGoods-=s,this.basketItems.splice(e,1),this.refresh();break}}},{key:"clear",value:function(){this.countGoods=0,this.amount=0,this.basketItems=[],this.refresh()}},{key:"setCounterAndTotalPrice",value:function(){var t=this.countGoods;0<t?this.$elemCounter.text(t).addClass("active"):this.$elemCounter.text("").removeClass("active")}},{key:"refresh",value:function(){this.setCounterAndTotalPrice(),this.settings.objectBasketHeader&&this.settings.objectBasketHeader.refresh(),this.settings.objectBasketPage&&this.settings.objectBasketPage.refresh()}}]),e}(),BasketHeader=function(){function e(t){_classCallCheck(this,e),this.linkBasket=t,this.settings=t.settings.basketHeaderSettings,this.objectRunBasket=t.settings.objectRunBasket}return _createClass(e,[{key:"init",value:function(){var e=this,t=$("#"+this.settings.idWrapTopBasket);this.$productsWrap=$("<div />",{class:this.settings.classWrapProducts}),this.$elemTotalPrice=$("<span />",{class:this.settings.classTotalValue});var s=$("<div />",{class:this.settings.classWrapPriceTotal}).append($("<span />",{class:this.settings.classTotalDescription,text:"total"})).append(this.$elemTotalPrice),a=$("<div />",{class:this.settings.classWrapButton}).append($("<button />",{class:this.settings.classButtonCheckout,text:"Checkout"})).append($("<button />",{class:this.settings.classButtonGoToCart,text:"Go to cart","data-type":"shopping-cart"}));t.append(this.$productsWrap).append(s).append(a).on("click","button",function(t){return e.btnClickHandler(t)}),this.refresh()}},{key:"btnClickHandler",value:function(t){this.objectRunBasket.btnClickHandler(t)}},{key:"refresh",value:function(){if(this.$elemTotalPrice.text("$"+this.linkBasket.amount),0===this.linkBasket.basketItems.length)this.$productsWrap.empty().text("Товаров в карзине нет!");else{this.$productsWrap.empty();var t=!0,e=!1,s=void 0;try{for(var a,i=this.linkBasket.basketItems[Symbol.iterator]();!(t=(a=i.next()).done);t=!0){var n=a.value;this.$productsWrap.append(new Good(n.id_product,n.title,n.price,n.src,n.quantity).renderForHeader())}}catch(t){e=!0,s=t}finally{try{!t&&i.return&&i.return()}finally{if(e)throw s}}}}}]),e}(),BasketPage=function(){function e(t){_classCallCheck(this,e),this.linkBasket=t,this.settings=t.settings.basketPageSettings,this.objectRunBasket=t.settings.objectRunBasket,this.objectRunBasket=t.settings.objectRunBasket,this.$wrapCart=null,this.$subTotal=null,this.$grandTotal=null}return _createClass(e,[{key:"init",value:function(){var e=this;this.$wrapCart=$("."+this.settings.classWrapCart),this.$subTotal=$("#"+this.settings.idSpanForSubTotal),this.$grandTotal=$("#"+this.settings.idSpanForGrandTotal),$("."+this.settings.classWrapContent).on("click","button",function(t){return e.btnClickHandler(t)}),this.$wrapCart.on("change","input",function(t){return e.inputChangeHandler(t)}),this.refresh()}},{key:"btnClickHandler",value:function(t){this.objectRunBasket.btnClickHandler(t)}},{key:"inputChangeHandler",value:function(t){this.objectRunBasket.btnClickHandler(t)}},{key:"refresh",value:function(){if(this.$subTotal.text("$"+this.linkBasket.amount),this.$grandTotal.text("$"+this.linkBasket.amount),0===this.linkBasket.basketItems.length)this.$wrapCart.empty().addClass(this.settings.classWrapCart+"_empty").text("Товаров в карзине нет!");else{this.$wrapCart.empty();var t=!0,e=!1,s=void 0;try{for(var a,i=this.linkBasket.basketItems[Symbol.iterator]();!(t=(a=i.next()).done);t=!0){var n=a.value;this.$wrapCart.append(new Good(n.id_product,n.title,n.price,n.src,n.quantity).renderForPage())}}catch(t){e=!0,s=t}finally{try{!t&&i.return&&i.return()}finally{if(e)throw s}}}}}]),e}(),Good=function(){function n(t,e,s,a,i){_classCallCheck(this,n),this.id=t,this.title=e,this.price=s,this.src=a,this.quantity=i}return _createClass(n,[{key:"renderForHeader",value:function(){return $('<div class="acc__cart__product">\n                    <div class="acc__cart__product__img">\n                      <img src="'+this.src+'" width="72" height="85" alt="Rebox Zane">\n                    </div>\n                    <div class="acc__cart__product__data">\n                      <span class="product__data_head">'+this.title+'</span>\n                      <span class="product__data_quality">\n                        <i class="fa fa-star" aria-hidden="true"></i>\n                        <i class="fa fa-star" aria-hidden="true"></i>\n                        <i class="fa fa-star" aria-hidden="true"></i>\n                        <i class="fa fa-star" aria-hidden="true"></i>\n                        <i class="fa fa-star quality-white" aria-hidden="true"></i>\n                      </span>\n                      <div class="product__data_calculation">\n                        <span class="product__data_number">'+this.quantity+'</span> x <span class="product__data_price">$'+this.price+'</span>\n                      </div>\n                    </div>\n                    <div class="acc__cart__product__del">\n                      <button data-type="del" data-id="'+this.id+'">\n                        <i class="fa fa-times" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                  </div>')}},{key:"renderForPage",value:function(){return $('<div class="shopping-cart" data-id="'+this.id+'">\n                <div class="shopping-cart__product-details shopping-cart__column-first">\n                  <a href="#">\n                    <img src="'+this.src+'" width="100" height="115" alt="Mango People T-shirt">\n                  </a>\n                  <div class="product-details__description">\n                    <a href="#">'+this.title+'</a>\n                    <div>\n                      <div class="option-row">\n                        <span class="option-row__option">Color:</span>\n                        <span class="option-row__value">Red</span>\n                      </div>\n                      <div class="option-row">\n                        <span class="option-row__option">Size:</span>\n                        <span class="option-row__value">Xll</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class="shopping-cart__unite-price shopping-cart__column-center">\n                  <span class="unite-price">$'+this.price+'</span>\n                </div>\n                <div class="shopping-cart__quantity shopping-cart__column-center">\n                  <input title="quantity" type="text" class="quantity" data-type="quantity" value="'+this.quantity+'" required>\n                </div>\n                <div class="shopping-cart__shipping shopping-cart__column-center">\n                  <span class="shipping">free</span>\n                </div>\n                <div class="shopping-cart__subtotal shopping-cart__column-center">\n                  <span class="subtotal">$'+this.quantity*this.price+'</span>\n                </div>\n                <div class="shopping-cart__action shopping-cart__column-last">\n                  <button data-id="'+this.id+'" data-type="delAll">\n                    <i class="fa fa-times" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>')}}]),n}(),basketRun={settings:{classWrapProductItems:"wrap-product-item",classProductItem:"product-item",classProductTitle:"title-item",classProductPrice:"price-val",classProductImage:"product-img",namePageShoppingCart:"shopping-cart",basketSettings:{pathJsonFile:"./json/basket_get.json",idCountGoods:"count-goods",objectRunBasket:null,objectBasketHeader:null,objectBasketPage:null,basketHeaderSettings:{idWrapTopBasket:"wrap-top-basket",classWrapProducts:"acc__cart__products-wrap",classWrapPriceTotal:"acc__cart__price-total",classWrapButton:"acc__cart__buttons",classTotalDescription:"price-total_description",classTotalValue:"price-total_value",idTotalValue:"total-top-basket",classButtonCheckout:"buttons_checkout",classButtonGoToCart:"buttons_go-to-cart",$elemWrapHeaderBasket:null},basketPageSettings:{classWrapContent:"wrap-content",classWrapCart:"wrap-cart",classShoppingCart:"shopping-cart",classUnitePriceForCart:"unite-price",classQuantityForCartInput:"quantity",classSubtotalForCart:"subtotal",idBtnForClearShoppingCart:"clearShoppingCart",idBtnForContinueShopping:"continueShopping",idSpanForSubTotal:"subTotal",idSpanForGrandTotal:"grandTotal",idBtnForCheckout:"proceedToCheckout"}}},$ElemDropBasket:null,basket:null,init:function(){var e=this;(this.settings.basketSettings.objectRunBasket=this).basket=new Basket(this.settings.basketSettings),this.basket.getBasket(function(){(e.settings.basketSettings.objectBasketHeader=new BasketHeader(e.basket)).init(),(e.settings.basketSettings.objectBasketPage=new BasketPage(e.basket)).init()});var t=$("."+this.settings.classWrapProductItems);0<!t.length||(t.on("click","button[data-type = add]",function(t){e.btnClickHandler(t),e.showDialog()}),this.droppInit())},btnClickHandler:function(t){var e=$(t.currentTarget);switch(e.attr("data-type")){case"del":this.removeOfBasket(e);break;case"delAll":this.removeAllQantity(e);break;case"add":this.goodAddToBasket(e.parents("."+this.settings.classProductItem));break;case"clear":this.clearBasket();break;case"quantity":this.goodAddQuantity(e.parents("."+this.settings.basketSettings.basketPageSettings.classShoppingCart));break;case"continue":case"checkout":break;case this.settings.namePageShoppingCart:location.href=this.settings.namePageShoppingCart+".html"}},goodAddToBasket:function(t){var e,s=[parseInt(t.attr("data-id")),t.find("."+this.settings.classProductTitle).text(),parseInt(t.find("."+this.settings.classProductPrice).text()),t.find("."+this.settings.classProductImage).attr("src")];(e=this.basket).add.apply(e,s)},goodAddQuantity:function(t){var e,s=[parseInt(t.attr("data-id")),parseInt(t.find("input.quantity").val())];(e=this.basket).addQuantity.apply(e,s)},removeOfBasket:function(t){this.basket.remove(parseInt(t.attr("data-id")))},removeAllQantity:function(t){this.basket.removeAllQuantity(parseInt(t.attr("data-id")))},clearBasket:function(){var t=this;if(this.basket.countGoods)var e=$("<div />",{text:"Вы действительно хитите очистить корзину?",css:{color:"red"}}).dialog({appendTo:"body",position:{my:"center",at:"center"},title:"Очистить корзину",resizable:!1,modal:!0,width:350,buttons:{"Очистить корзину":function(){t.basket.clear(),e.dialog("close")},Cancel:function(){e.dialog("close")}},close:function(){return e.remove()}})},droppInit:function(){var s=this;this.$ElemDropBasket=$("<div />",{id:"basket"}).appendTo($("body")).append($("<div />",{text:"Для добавления в корзину перетащите суда товар!",class:"dropp-basket-text"})),$(".product-item").draggable({helper:"clone",scope:"good",addClasses:!0,cursorAt:{left:50,top:50},cursor:"pointer",start:function(t,e){e.helper.addClass("ui-drag-activate_good"),s.$ElemDropBasket.addClass("basket-dropp",500)},stop:function(){s.$ElemDropBasket.removeClass("basket-dropp",500)}}),$("#basket").droppable({activeClass:"ui-drag-activate_basket",scope:"good",tolerance:"pointer",drop:function(t,e){s.goodAddToBasket(e.draggable),s.showDialog()}})},showDialog:function(){var t=$("<div />",{text:"Товар добавлен в корзину"}).dialog({appendTo:"body",hide:{effect:"scale",duration:500},position:{my:"center top",at:"center top+50px"},close:function(){return t.remove()}});setTimeout(function(){t.dialog("close")},1e3)}};$(document).ready(function(){return basketRun.init()});var Comment=function(){function a(t,e,s){_classCallCheck(this,a),this.text=s,this.id_comment=t,this.name=e,this.classContainer="comment-item",this.className="comment-item_name",this.classMessage="comment-item_message",this.classDelBtn="comment-item_del-btn",this.classApprovelBtn="comment-item_approve-btn"}return _createClass(a,[{key:"render",value:function(t){var e=$("<div />",{class:this.classContainer,"data-id":this.id_comment,"data-approved":!1}),s=$("<p />",{class:this.className,text:this.name}),a=$("<p />",{class:this.classMessage,text:this.text}),i=$("<button />",{class:this.classDelBtn,"data-id":this.id_comment,"data-type":"del",text:"Удалить"}),n=$("<button />",{class:this.classApprovelBtn,"data-id":this.id_comment,"data-type":"app",text:"Одобрить"});e.append(s).append(a).append(i).append(n).appendTo(t)}}]),a}(),settings={idContainer:"container",idCommentBlock:"comment_wrapper",classCommentApproved:"approved",urlGetAllComments:"json/review.list.json",urlDelComment:"json/review.delete.json",urlApprovalComment:"json/review.submit.json",urlAddComment:"json/review.add.json"},commentBlock={settings:settings,$elCommentBlock:null,arrAllComments:[],init:function(){var e=this;this.$elCommentBlock=$("#"+this.settings.idCommentBlock),$("#"+this.settings.idContainer).on("click","button",function(t){return e.btnClickHandler(t)}),this.ajax({url:this.settings.urlGetAllComments,data:"",success:function(t){t.result&&0===t.result?console.error("Ошибка! Ответ от сервера: "+t.error_message):(e.arrAllComments=t.comments,e.render())}})},render:function(){if(0<this.arrAllComments.length){var t=!0,e=!1,s=void 0;try{for(var a,i=this.arrAllComments[Symbol.iterator]();!(t=(a=i.next()).done);t=!0){var n=a.value;new Comment(n.id_comment,n.name,n.text).render(this.$elCommentBlock)}}catch(t){e=!0,s=t}finally{try{!t&&i.return&&i.return()}finally{if(e)throw s}}}},btnClickHandler:function(t){"del"===t.target.dataset.type?this.remove(t.target):"app"===t.target.dataset.type?this.approve(t.target):"add"===t.target.dataset.type&&(t.preventDefault(),this.add(t.target))},approve:function(i){var n=this;this.ajax({url:this.settings.urlApprovalComment,data:{id_comment:i.dataset.id},success:function(t){var e,s,a;s=i,a=n,(e=t).result&&1===e.result?($(s).parent(".comment-item").addClass(a.settings.classCommentApproved).attr("data-approved",!0),$(s).remove()):0===e.result&&alert("Сервер вернул ошибку: "+e.error_message)}})},remove:function(a){this.ajax({url:this.settings.urlDelComment,data:{id_comment:a.dataset.id},success:function(t){var e,s;s=a,(e=t).result&&1===e.result?$(s).parent(".comment-item").remove():0===e.result&&alert("Сервер вернул ошибку: "+e.error_message)}})},add:function(t){var i=this;if(validateForm){if(!validateForm.startValidate($(t).parents("form")))return;$(t).parents("form").find("."+validateForm.classValidateInput).removeClass(validateForm.classValidateInput)}var n=$(t).siblings("#nameUser"),r=$(t).siblings("#commentUser"),o=n.val(),l=r.val();if(o&&l){var c=Math.floor(100*Math.random()*o.length);this.ajax({url:this.settings.urlAddComment,data:{id_user:c,name:o,text:l},success:function(t){var e,s,a;e=t,s=i.$elCommentBlock,a=i.arrAllComments,e.result&&1===e.result?(new Comment(c,o,l).render(s),a.push({id_comment:c,name:o,text:l}),n.val(""),r.val("")):0===e.result&&alert("Сервер вернул ошибку: "+e.error_message)}})}},ajax:function(t){$.ajax({url:t.url,type:"GET",dataType:"json",data:t.data,success:t.success,error:function(t,e,s){return console.error(e,s)}})}},validateForm={idInputName:"nameUser",idInputPhone:"phone",idInputEmail:"email",idInputMessage:"commentUser",idBtnSubmit:"btnAddComment",classElemOutErr:"error-message",classNoValidateInput:"error-input",classValidateInput:"success-input",errorMessage:{nameUser:"Имя должно содержать только буквы",phone:'Телефон должен быть в формате "+7(000)000-0000"',email:"Не корректный email",commentUser:"Вы забыли написать комментарий"},regExpName:/^[a-zа-яё]{2,}$/i,regExpPhone:/^\+\d\(\d{3}\)\d{3}-\d{4}$/,regExpEmail:/^[a-z0-9-_.]+@[a-z]+.[a-z]{2,4}$/i,regExpMessage:/[\wа-яё]{3,}/,startValidate:function(t){var e=$(t).find("input, textarea"),s=!0,a=!0,i=!1,n=void 0;try{for(var r,o=e[Symbol.iterator]();!(a=(r=o.next()).done);a=!0){var l=r.value;if(l.id!==this.idBtnSubmit)this.validateInput(l)?this.outMessageFailValidate(l,!0):(this.outMessageFailValidate(l),s=!1)}}catch(t){i=!0,n=t}finally{try{!a&&o.return&&o.return()}finally{if(i)throw n}}return s},validateInput:function(t){switch(t.id){case this.idInputName:return this.regExpName.test(t.value.trim());case this.idInputPhone:return this.regExpPhone.test(t.value.trim());case this.idInputEmail:return this.regExpEmail.test(t.value.trim());case this.idInputMessage:return this.regExpMessage.test(t.value.trim())}},outMessageFailValidate:function(t){var e=1<arguments.length&&void 0!==arguments[1]&&arguments[1],s=document.getElementById("error-"+t.id);e?(s&&s.parentElement.removeChild(s),t.classList.remove(this.classNoValidateInput),t.classList.add(this.classValidateInput),t.value=t.value.trim()):(s||((s=document.createElement("div")).id="error-"+t.id,s.classList.add(this.classElemOutErr),t.parentElement.insertBefore(s,t.nextElementSibling)),t.classList.remove(this.classValidateInput),t.classList.add(this.classNoValidateInput),s.innerText="- "+this.errorMessage[t.id],t.value="",$(t).effect("bounce"))}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
